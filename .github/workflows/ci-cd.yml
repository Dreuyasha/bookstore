name: CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:

env:
  REGISTRY: docker.io
  IMAGE_NAME_FRONTEND: dreuyasha/bookstore-frontend
  IMAGE_NAME_BACKEND: dreuyasha/bookstore-backend

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      # ðŸ§¹ Step 1: Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # ðŸ§° Step 2: Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ”‘ Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ðŸ§± Step 4: Build Frontend image
      - name: Build frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ env.IMAGE_NAME_FRONTEND }}:latest

      # ðŸ§  Step 5: Build Backend image
      - name: Build backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.IMAGE_NAME_BACKEND }}:latest

      # âœ… Step 6: Test Backend container (optional quick test)
      - name: Test backend container
        run: |
          docker run -d --name test-backend -p 8081:8081 ${{ env.IMAGE_NAME_BACKEND }}:latest
          sleep 5
          curl -f http://localhost:8081 || (echo "Backend test failed!" && exit 1)
          docker stop test-backend
          docker rm test-backend

  # ðŸš€ Optional: Deployment Job (e.g. AWS ECS or VPS)
  deploy:
    runs-on: ubuntu-latest
    needs: build-test-push
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ~/bookstore-app
            git pull
            docker-compose pull
            docker-compose up -d
